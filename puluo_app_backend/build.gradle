subprojects {
    
    apply {
        plugin 'scala'
        plugin 'eclipse'
    }

    ext {
        scalaVersion = '2.10'
        scalaMinor = '3'
        specs2Version = "1.14"
    }

    configurations {
        scalaCompiler
        scalaLibrary
    }

    sourceSets {
        main {
            java {
                srcDir 'src/main/java'
            }
            scala {
                srcDir 'src/main/scala'
            } 
            resources {
                srcDir 'src/main/java'
            }
        }
        test {
            java {
                srcDir 'src/test/java'
            }
            scala {
                srcDir 'src/test/scala'
            }
            resources {
                srcDir 'src/test/java'
            }
        }
    }

    repositories {
        mavenCentral()
   	jcenter()
    }
 
    eclipse {
        classpath.containers += ["org.scala-ide.sdt.launching.SCALA_CONTAINER"]
        classpath.minusConfigurations = [configurations.scalaLibrary]
        classpath.plusConfigurations =  ([configurations.scalaCompiler]  + classpath.plusConfigurations)
    }

    tasks.withType(ScalaCompile) {
        scalaCompileOptions.useCompileDaemon = false
        scalaCompileOptions.useAnt = false
    }

    tasks.withType(JavaCompile) { 
    	options.encoding = "UTF-8" 
    }
    	 
    dependencies {
        scalaCompiler "org.scala-lang:scala-compiler:$scalaVersion.$scalaMinor"
        scalaLibrary "org.scala-lang:scala-library:$scalaVersion.$scalaMinor"
        compile "org.scala-lang:scala-library:$scalaVersion.$scalaMinor",
        "ch.qos.logback:logback-classic:1.0.13",
        "com.h2database:h2:1.3.155"
        testCompile "junit:junit:4.5",
        "org.specs2:specs2_$scalaVersion:$specs2Version"
   	testCompile "org.mockito:mockito-core:1.10.19"
    }

}

task wrapper(type: Wrapper) {
        gradleVersion = '2.2.1'
}
